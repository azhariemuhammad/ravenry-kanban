{"version":3,"sources":["types/index.js","reducers/company.js","reducers/office.js","reducers/index.js","store/configureStore.js","utils/createRestApiClient.js","services/base.service.js","actions/company.js","actions/office.js","containers/TopContainer.jsx","containers/BottomContainer.jsx","components/cards/index.jsx","components/form/FieldGroup.component.jsx","components/form/DropDownMenu.component.jsx","components/create-company/index.jsx","components/create-office/index.jsx","containers/OverviewContainer.jsx","pages/page.jsx","pages/overview-page/index.jsx","components/office-detail/office-detail.jsx","components/list-office/list-office.jsx","containers/OfficeContainer.jsx","pages/office-page/index.jsx","App.js","serviceWorker.js","index.js"],"names":["CREATE_COMPANY_REQUEST","CREATE_COMPANY_FAILURE","CREATE_COMPANY_SUCCESS","GET_COMPANY_SUCCESS","GET_COMPANY_FAILURE","REMOVE_COMPANY_REQUEST","REMOVE_COMPANY_SUCCESS","CREATE_OFFICE_SUCCESS","CREATE_OFFICE_FAILURE","GET_OFFICE_BY_COMPANY_SUCCESS","GET_OFFICE_BY_COMPANY_FAILURE","REMOVE_OFFICE_REQUEST","REMOVE_OFFICE_SUCCESS","initialState","companies","createCompany","state","action","type","types","id","length","name","address","revenue","phone","company","arguments","undefined","Object","objectSpread","payload","alert","error","toConsumableArray","concat","window","confirm","filter","_ref","offices","office","rootReducer","combineReducers","enhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","thunk","store","createStore","RestApiClient","config","classCallCheck","this","client","axios","create","options","request","createRestApiClient","withConfig","base_service","baseURL","getCompany","method","url","data","destroyCompany","getOfficeByCompany","companyId","createOffice","_ref2","location","startDate","destroyOffice","officeId","getCompanySuccess","getCompanyFailure","dispatch","getState","baseService","then","res","status","catch","createCompanyRequest","createCompanySuccess","createCompanyFailure","formatPhone","removeCompanySuccess","removeCompanyFailure","removeCompanyRequest","removeCompany","code","number","getOfficeByCompanySuccess","getOfficeFailure","createOfficeSuccess","createOfficeFailure","removeOfficeSuccess","removeOfficeFailure","removeOfficeRequest","removeOffice","TopContainer","_React$Component","props","possibleConstructorReturn","getPrototypeOf","call","inherits","createClass","key","value","react_default","a","createElement","className","style","height","children","React","Component","BottomContainer","Card","removeItem","onClick","e","preventDefault","handleRemoveItem","FieldGroup","_this","moment","lat","long","handleDateChange","bind","assertThisInitialized","event","param","target","callbackParent","setState","formatPhoneNumber","formatLoc","val","_this2","label","color","errors","placeholder1","width","marginRight","placeholder","onChange","handleInput","_this3","onTextChanged","react_datepicker_es","selected","doubleInput","datePicker","regulerInput","DropDownMenu","apply","handleSelection","listCompany","map","item","idx","CreateCompany","property","newState","validatingForm","handleOnSubmitCompany","removeFieldInput","fields","formIsValid","setTimeout","companyFormRef","reset","onSubmit","handleOnSubmit","ref","el","FieldGroup_component_FieldGroup","regularInput","initialValue","onChildChanged","display","message","CreateOffice","handleOnSubmitOffice","officeFormRef","longitude","DropDownMenu_component_DropDownMenu","OverviewContainer","actionsCompany","actionsOffice","TopContainer_TopContainer","create_company_CreateCompany","handleSubmitCompany","create_office_CreateOffice","handleSubmitOffice","BottomContainer_BottomContainer","Link","to","cards_Card","handleRemoveCompany","cardContent","noCompany","connect","bindActionCreators","Page","OverviewPage","containers_OverviewContainer","OfficeDetail","ListOffice","handleRemoveOffice","format","OfficeContainer","match","params","office_detail_OfficeDetail","list_office_ListOffice","OfficePage","containers_OfficeContainer","App","es","BrowserRouter","Switch","Route","exact","path","component","Boolean","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f4aea69a.chunk.js","sourcesContent":["export const CREATE_COMPANY_REQUEST = 'CREATE_COMPANY_REQUEST';\nexport const CREATE_COMPANY_FAILURE = 'CREATE_COMPANY_FAILURE';\nexport const CREATE_COMPANY_SUCCESS = 'CREATE_COMPANY_SUCCESS';\nexport const CREATE_COMPANY_DUPLICATE = 'CREATE_COMPANY_DUPLICATE';\n\nexport const GET_COMPANY = 'GET_COMPANY';\nexport const GET_COMPANY_REQUEST = 'GET_COMPANY_REQUEST';\nexport const GET_COMPANY_SUCCESS = 'GET_COMPANY_SUCCESS';\nexport const GET_COMPANY_FAILURE = 'GET_COMPANY_FAILURE';\n\nexport const REMOVE_COMPANY = 'REMOVE_COMPANY';\nexport const REMOVE_COMPANY_REQUEST = 'REMOVE_COMPANY_REQUEST';\nexport const REMOVE_COMPANY_SUCCESS = 'REMOVE_COMPANY_SUCCESS';\nexport const REMOVE_COMPANY_FAILURE = 'REMOVE_COMPANY_FAILURE';\n\nexport const CREATE_OFFICE_REQUEST = 'CREATE_OFFICE_REQUEST'\nexport const CREATE_OFFICE_SUCCESS = 'CREATE_OFFICE_SUCCESS'\nexport const CREATE_OFFICE_FAILURE = 'CREATE_OFFICE_FAILURE'\n\nexport const GET_OFFICE_BY_COMPANY = 'GET_OFFICE_BY_COMPANY'\nexport const GET_OFFICE_BY_COMPANY_REQUEST = 'GET_OFFICE_BY_COMPANY_REQUEST'\nexport const GET_OFFICE_BY_COMPANY_SUCCESS = 'GET_OFFICE_BY_COMPANY_REQUEST'\nexport const GET_OFFICE_BY_COMPANY_FAILURE = 'GET_OFFICE_BY_COMPANY_FAILURE'\n\nexport const REMOVE_OFFICE = 'REMOVE_OFFICE';\nexport const REMOVE_OFFICE_REQUEST = 'REMOVE_OFFICE_REQUEST';\nexport const REMOVE_OFFICE_SUCCESS = 'REMOVE_OFFICE_SUCCESS';\nexport const REMOVE_OFFICE_FAILURE = 'REMOVE_OFFICE_FAILURE';\n","import * as types from '../types';\n\n\nconst initialState = {\n  companies: []\n}\n\nconst createCompany = (state, action) => {\n  switch (action.type) {\n    case types.CREATE_COMPANY_REQUEST:\n      return {\n        id: state.length + 1,\n        name: action.name,\n        address: action.address,\n        revenue: action.revenue,\n        phone: action.phone\n      }\n    default:\n      return state;\n  }\n}\n\nfunction company(state=initialState, action) {\n  switch (action.type) {\n    case types.GET_COMPANY_SUCCESS: \n      return { ...state, companies: action.payload.companies}\n    case types.GET_COMPANY_FAILURE:\n      alert(action.error.error)\n      return \n    case types.CREATE_COMPANY_REQUEST:\n      return {...state, companies: [...state.companies, createCompany(state.companies, action)] }\n    case types.CREATE_COMPANY_SUCCESS:\n      window.confirm(action.payload)\n      return state\n    case types.CREATE_COMPANY_FAILURE:\n      return action.payload.error\n    case types.REMOVE_COMPANY_REQUEST:\n    return {...state, companies: state.companies.filter(({id}) => id !== action.id)}\n    case types.REMOVE_COMPANY_SUCCESS:\n      return state\n    default:\n      return state\n  }\n}\n\n\n\nexport default company","import * as types from '../types';\n\n\nconst initialState = {\n  offices: []\n}\n\nfunction office(state=initialState, action) {\n  switch (action.type) {\n    case types.GET_OFFICE_BY_COMPANY_SUCCESS: \n      return { ...state, offices: action.payload.offices}\n    case types.GET_OFFICE_BY_COMPANY_FAILURE:\n      return action.error.error\n    case types.CREATE_OFFICE_SUCCESS:\n      window.confirm(action.payload)\n      return state\n    case types.CREATE_OFFICE_FAILURE:\n      alert(action.error)\n      return state\n    case types.REMOVE_OFFICE_REQUEST:\n      return {...state, offices: state.offices.filter(({id}) => id !== action.id)}\n    case types.REMOVE_OFFICE_SUCCESS:\n      return state\n    default:\n      return state\n  }\n}\n\n\n\nexport default office","import { combineReducers } from 'redux';\nimport company from './company'\nimport office from './office'\n\nexport const rootReducer = combineReducers({\n  company,\n  office\n});","\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport thunk from 'redux-thunk'\n\nimport { rootReducer } from '../reducers'\n\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst middleware = applyMiddleware(thunk)\nconst enhancer = composeEnhancers(middleware)\n\nlet store = createStore(rootReducer, enhancer)\n\n\nexport default store","import axios from 'axios';\nclass RestApiClient {\n  constructor(config) {\n    this.client = axios.create(config);\n  }\n\n  request(options) {\n    return this.client.request(options);\n  }\n}\n\nconst createRestApiClient = () => ({\n  withConfig: config => new RestApiClient(config)\n});\n\nexport default createRestApiClient;","import createRestApiClient from '../utils/createRestApiClient';\n\nconst apiEndpoint = \"http://5bdea7dd7ad6890013e9c2b5.mockapi.io/api/v1\"\n\nexport default () => {\n  const client = createRestApiClient().withConfig({ baseURL: apiEndpoint });\n  return {\n    getCompany: () => client.request({\n      method: 'GET',\n      url: '/companies'\n    }),\n    createCompany: ({ name, address, revenue, phone }) => client.request({\n      method: 'POST',\n      url: `/companies`,\n      data: {\n        name,\n        address,\n        revenue,\n        phone\n      }\n    }),\n    destroyCompany: (id) => client.request({\n      method: 'DELETE',\n      url: `/companies/${id}`\n    }),\n    getOfficeByCompany: (companyId) => client.request({\n      method: 'GET',\n      url: `/companies/${companyId}/office`\n    }),\n    createOffice: ({companyId, name, location, startDate}) => client.request({\n      method: 'POST',\n      url: `/companies/${companyId}/office`,\n      data: {\n        companyId,\n        name,\n        location,\n        startDate\n      }\n    }),\n    destroyOffice: (officeId, companyId) => client.request({\n      method: 'DELETE',\n      url: `companies/${companyId}/office/${officeId}`\n    })\n  };\n};\n","import * as types from '../types';\nimport { baseService } from '../services';\n\n\nexport const getCompanySuccess = (companies) => {\n  return {\n    type: types.GET_COMPANY_SUCCESS,\n    payload: {companies}\n  }\n}\n\nexport const getCompanyFailure = (error) => {\n  return {\n    type: types.GET_COMPANY_FAILURE,\n    error\n  }\n}\n\nexport const getCompany = () => {\n  return (dispatch, getState) => {\n    return baseService().getCompany().then(res => {\n      if (res.status === 200) {\n        return dispatch(getCompanySuccess(res.data));\n      }\n    })\n    .catch(() => {\n      return dispatch(getCompanyFailure({error: 'Oops! Something went wrong and we couldn\\'t get list of companies'}));\n    });\n  }\n}\n\nexport const createCompanyRequest = (company) => {\n  return {\n    type: types.CREATE_COMPANY_REQUEST,\n    name: company.name,\n    address: company.address,\n    revenue: company.revenue,\n    phone: company.phone\n  }\n}\n\nexport const createCompanySuccess = (company) => {\n  return {\n    type: types.CREATE_COMPANY_SUCCESS,\n    payload: `succes create company`\n  }\n}\n\nexport const createCompanyFailure = (error) => {\n  return {\n    type: types.CREATE_COMPANY_FAILURE,\n    error\n  }\n}\n\nexport const createCompany = (data) => {\n  data.phone = formatPhone(data.phone)\n  return (dispatch, getState) => {\n    dispatch(createCompanyRequest(data))\n    return baseService().createCompany(data).then((res) => {\n      if (res.status === 201) {\n        return dispatch(createCompanySuccess(res.data))\n      }\n    })\n    .catch(() => {\n      return dispatch(createCompanyFailure({error: 'Oops! Something went wrong and we couldn\\'t create company'}));\n    })\n  }\n}\n\n\nexport const removeCompanySuccess = (id) => {\n  return {\n    type: types.REMOVE_COMPANY_SUCCESS,\n    id\n  }\n}\n\nexport const removeCompanyFailure = (error) => {\n  return {\n    type: types.REMOVE_COMPANY_FAILURE,\n    error\n  }\n}\n\nexport const removeCompanyRequest = (id) => {\n  return {\n    type: types.REMOVE_COMPANY_REQUEST,\n    id\n  }\n}\n\nexport const removeCompany = (id) => {\n  return (dispatch, getState) => {\n    dispatch(removeCompanyRequest(id))\n    return baseService().destroyCompany(id).then((res) => {\n      if (res.status === 200) {\n        return dispatch(removeCompanySuccess(res.data.id))\n      }\n    })\n    .catch(() => {\n      return dispatch(removeCompanyFailure({error: 'Oops! Something went wrong and we couldn\\'t remove company'}));\n    })\n  }\n}\n\n\nconst formatPhone = (state) => {\n  const phone = `(${state.code}) ${state.number}`\n  return phone\n}","import * as types from '../types';\nimport { baseService } from '../services';\n\n\nexport const getOfficeByCompanySuccess = (offices) => {\n  return {\n    type: types.GET_OFFICE_BY_COMPANY_SUCCESS,\n    payload: {offices}\n  }\n}\n\nexport const getOfficeFailure = (error) => {\n  return {\n    type: types.GET_OFFICE_BY_COMPANY_FAILURE,\n    error\n  }\n}\n\nexport const getOfficeByCompany = (companyId) => {\n  return (dispatch, getState) => {\n    return baseService().getOfficeByCompany(companyId).then(res => {\n      if (res.status === 200) {\n        return dispatch(getOfficeByCompanySuccess(res.data))\n      }\n    })\n    .catch(() => {\n      return dispatch(getOfficeFailure({error: 'Oops! Something went wrong and we couldn\\'t get list of office'}));\n    });\n  }\n}\n\nexport const createOffice = (data) => {\n  return (dispatch, getState) => {\n    return baseService().createOffice(data).then(res => {\n      if (res.status === 201) {\n        return dispatch(createOfficeSuccess(res.data.name));\n      }\n    })\n    .catch(() => {\n        return dispatch(createOfficeFailure({error: 'Oops! Something went wrong and we couldn\\'t get list of office'}));\n    });\n  }\n}\n\n\nexport const createOfficeSuccess = (name) => {\n  return {\n    type: types.CREATE_OFFICE_SUCCESS,\n    payload: `success add new office: ${name}`\n  }\n}\n\nexport const createOfficeFailure = (error) => {\n  return {\n    type: types.CREATE_OFFICE_FAILURE,\n    error\n  }\n}\n\n\n\nexport const removeOfficeSuccess = (name) => {\n  return {\n    type: types.REMOVE_OFFICE_SUCCESS,\n    payload: `success remove office: ${name}`\n  }\n}\n\nexport const removeOfficeFailure = (error) => {\n  return {\n    type: types.REMOVE_OFFICE_FAILURE,\n    error\n  }\n}\nexport const removeOfficeRequest = (id) => {\n  return {\n    type: types.REMOVE_OFFICE_REQUEST,\n    id\n  }\n}\n\nexport const removeOffice = (officeId, companyId) => {\n  return (dispatch, getState) => {\n    dispatch(removeOfficeRequest(officeId))\n    return baseService().destroyOffice(officeId, companyId).then((res) => {\n      if (res.status === 200) {\n        return dispatch(removeOfficeSuccess(res.data.name))\n      }\n    })\n    .catch(() => {\n      return dispatch(removeOfficeFailure({error: 'Oops! Something went wrong and we couldn\\'t remove company'}));\n    })\n  }\n}\n","import React from \"react\";\n\nexport class TopContainer extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <div className=\"wrapper-forms\" style={{'height': this.props.height}}>\n        {this.props.children}\n      </div>\n    );\n  }\n}\n\nexport default TopContainer\n","import React from \"react\";\n\nimport './style.css'\nexport const BottomContainer = ({children}) => {\n  return (\n    <div className=\"wrapper-cards\">\n      {children}  \n    </div>\n  );\n};\n","import React from 'react';\n\nimport './style.css'\n\nexport const Card = ({children, removeItem, name, address, revenue, phone, id }) => {\n\n  const handleRemoveItem = (e, id) => {\n    e.preventDefault()\n    removeItem(id)\n  } \n  return (\n    <div className=\"card\">\n    <div className=\"card-header\">\n      <div className=\"card-title\">\n          <div>{ name }</div>\n          <button className=\"btn-close\" onClick={(e) => handleRemoveItem(e, id)}>X</button>\n      </div>\n    </div>\n        {children}\n    </div>\n  )\n}","import React from 'react';\nimport DatePicker from \"react-datepicker\";\nimport moment from 'moment';\n\nimport './style.css'\nimport \"react-datepicker/dist/react-datepicker.css\";\nexport class FieldGroup extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      phone: {\n        number: '',\n        code: ''\n      },\n      startDate: moment(),\n      location: {\n        lat: '',\n        long: ''\n      }\n    }\n    this.handleDateChange = this.handleDateChange.bind(this);\n  }\n  \n  onTextChanged(event, param) {\n    const value = event.target.value  \n    this.props.callbackParent(value)\n  }\n  \n  handleInput(event, param) {\n    const value = event.target.value  \n    if (param === 'code') {\n      this.setState({phone:{code: value, number: this.state.phone.number}},\n        function() {\n          this.formatPhoneNumber()\n        })\n    } else if (param === 'number') {\n      this.setState({phone:{code: this.state.phone.code, number: value}}, \n        function() {\n          this.formatPhoneNumber()\n        })\n    } else if (param === 'latitude') {\n      this.setState({location: {lat: value, long: this.state.location.long}}, \n        function() {this.formatLoc()})\n    } else if (param === 'longitude'){\n      this.setState({location: {lat: this.state.location.lat, long: value}}, \n        function() {this.formatLoc()})\n    }\n    \n  }\n\n  handleDateChange(val) {\n    this.setState({startDate: val}, function () {\n      this.props.callbackParent(this.state.startDate)\n    })\n  }\n\n\n  formatPhoneNumber() {\n    this.props.callbackParent(this.state.phone)\n  }\n\n  formatLoc() {\n    this.props.callbackParent(this.state.location)\n  }\n\n\n  doubleInput() {\n    return (\n      <div className=\"wrapper-input\">\n        <label>{this.props.label} <span style={{color: \"red\"}}>{(this.props.errors) && this.props.errors[this.props.placeholder1]}</span></label>\n        <br />\n        <span>\n          <input\n            style={{'width': '70px', 'marginRight': '10px'}}\n            type=\"number\"\n            placeholder={this.props.placeholder}\n            onChange={(e) => this.handleInput(e, this.props.placeholder)}\n          />\n          <input \n            type=\"number\"\n            style={{'width': '180px'}}\n            placeholder={this.props.placeholder1} \n            onChange={(e) => this.handleInput(e, this.props.placeholder1)} \n          />\n        </span>\n      </div>\n    )\n  }\n\n  regulerInput() {\n    return (\n      <div className=\"wrapper-input\">\n        <label>{this.props.label} <span style={{color: \"red\"}}>{(this.props.errors) && this.props.errors[this.props.placeholder]}</span></label>\n        <br />\n        <input \n          id={this.props.id}\n          type=\"text\" name={this.props.name} \n          value={this.props.name}\n          placeholder={this.props.placeholder}\n          onChange={(e) => this.onTextChanged(e)} />\n      </div>\n    );\n  }\n\n  datePicker() {\n    return (\n      <div className=\"wrapper-input\">\n        <label>{this.props.label}</label>\n            <DatePicker\n              selected={this.state.startDate}\n              onChange={this.handleDateChange}\n            />\n      </div>\n    )\n  }\n\n  render() {\n    if (this.props.doubleInput) {\n      return (this.doubleInput())\n    } if (this.props.datePicker) {\n      return this.datePicker()\n    } else {\n      return this.regulerInput()\n    }\n  }\n};","import React from 'react';\n\nexport class DropDownMenu extends React.Component {\n  \n  handleSelection(event) {\n    const value = event.target.value\n    this.props.callbackParent(value)\n  }\n\n  render() {\n    return (\n        <label className=\"menu\">\n          {this.props.label}\n          <br/>\n          <select className=\"menu\" onChange={(e) => this.handleSelection(e)}>\n            {\n              (this.props.listCompany.length > 0) && this.props.listCompany.map((item, idx) => {\n                return (\n                    <option key={idx} value={item.id}>{item.name}</option>\n                )\n            })\n            }\n          </select>\n        </label>\n    );\n  }\n}","import React from \"react\";\n\nimport { FieldGroup } from \"../form\";\nexport class CreateCompany extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: '',\n      address: '',\n      revenue: '',\n      phone: {},\n      errors: {\n        name: '',\n        address: '',\n        revenue: '',\n        number: '',\n      }\n    };\n  }\n\n  onChildChanged(property, newState) {\n    if (property === 'name') {\n      this.setState({ name: newState })\n    }\n    if (property === 'address') {\n      this.setState({ address: newState })\n    }\n    if (property === 'revenue') {\n      this.setState({ revenue: newState })\n    }\n    if (property === 'phone') {\n      this.setState({ phone: newState })\n    }\n  }\n\n  handleOnSubmit(e) {\n    e.preventDefault()\n    if (this.validatingForm()) {\n        this.props.handleOnSubmitCompany(this.state)\n        this.removeFieldInput()\n    }\n    return\n  }\n\n  validatingForm() {\n    let fields = this.state\n    let formIsValid = true\n    let errors = {}\n    \n    if (!fields['name']) {\n      formIsValid = false\n      errors['name'] = 'Cannot be empty'\n    } \n    if (!fields['phone'].number) {\n      formIsValid = false\n      errors['number'] = 'Cannot be empty'\n    }\n\n    if (!fields['phone'].code) {\n      formIsValid = false\n      errors['number'] = 'Cannot be empty'\n    }\n\n    if (!fields['revenue']) {\n      formIsValid = false\n      errors['revenue'] = 'Cannot be empty'\n    } \n    if (!fields['address']) {\n      formIsValid = false\n      errors['address'] = 'Cannot be empty'\n    }\n    \n\n    this.setState({errors: errors})\n    setTimeout(() => {\n      this.setState({errors: {}})\n    }, 2000)\n    return formIsValid\n  }\n\n  removeFieldInput() { \n    this.companyFormRef.reset();\n    this.setState({\n      name: '',\n      address: '',\n      revenue: '',\n      phone: {},\n    })\n  }\n\n  render() {\n    return (\n        <div>\n          <div className=\"title\">\n            <h1>Create Company</h1>\n          </div>\n          <form onSubmit={(e) => this.handleOnSubmit(e)} ref={(el) => this.companyFormRef = el}>\n            <FieldGroup\n              label=\"Name:\"\n              id=\"mainInput\"\n              regularInput={true}\n              placeholder=\"name\"\n              errors={{'name': this.state.errors.name}}\n              initialValue={this.state.name}\n              callbackParent={(newState) => this.onChildChanged('name', newState) }\n            />\n            <FieldGroup\n              label=\"Address:\"\n              regularInput={true}\n              placeholder=\"address\"\n              errors={{'address': this.state.errors.address}}\n              initialValue={this.state.address}\n              callbackParent={(newState) => this.onChildChanged('address', newState) }\n            />\n            <FieldGroup\n              label=\"Revenue:\"\n              regularInput={true}\n              placeholder=\"revenue\"\n              errors={{'revenue': this.state.errors.revenue}}\n              initialValue={this.state.revenue}\n              callbackParent={(newState) => this.onChildChanged('revenue', newState) }\n            />\n            <FieldGroup\n              label=\"Phone No:\"\n              doubleInput={true}\n              placeholder=\"code\"\n              placeholder1=\"number\"\n              errors={{'number': this.state.errors.number}}\n              initialValue={this.state.phone}\n              callbackParent={(newState) => this.onChildChanged('phone', newState) }\n            />\n            <p style={{'color': 'red', 'display': (this.message) ? 'black' : 'none'}}>Please fill in all fields</p>\n            <input className=\"btn-submit\" type=\"submit\" value=\"Create\"/>\n          </form>\n        </div>\n    );\n  }\n}\n","import React from \"react\";\nimport moment from 'moment'\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nimport { FieldGroup, DropDownMenu } from \"../form\";\nexport class CreateOffice extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      name: \"\",\n      location: {},\n      companyId: 1,\n      startDate: moment(),\n      errors: {}\n    };\n  }\n\n  onChildChanged(property, newState) {\n    if (property === \"name\") {\n      this.setState({ name: newState });\n    }\n    if (property === \"location\") {\n      this.setState({ location: newState});\n    }\n    if (property === \"companyId\") {\n      this.setState({ companyId: newState });\n    }\n    if (property === 'date') {\n      this.setState({ startDate: newState });\n    }\n  }\n  \n  handleOnSubmit(e) {\n    e.preventDefault()\n    if (this.validatingForm()) {\n      this.props.handleOnSubmitOffice(this.state)\n      this.removeFieldInput()\n    }\n    return;\n  }\n\n\n  removeFieldInput() { \n    this.officeFormRef.reset();\n    this.setState({\n      name: \"\",\n      location: {},\n    })\n  }\n\n  validatingForm() {\n    let fields = this.state\n    let formIsValid = true\n    let errors = {}\n\n    if (!fields['name']) {\n      formIsValid = false\n      errors['name'] = 'Cannot be empty'\n    } \n    if (!fields['location'].lat) {\n        formIsValid = false\n        errors['location'] = 'Cannot be empty'\n    }\n    if (!fields['location'].long) {\n      formIsValid = false\n      errors['location'] = 'Cannot be empty'\n    }\n\n    this.setState({errors: errors})\n    setTimeout(() => {\n      this.setState({errors: {}})\n    }, 2000)\n    return formIsValid\n  }\n\n\n  render() {\n    return (\n      <div>\n        <div className=\"title\">\n          <h1>Create Office</h1>\n        </div>\n        <form onSubmit={(e) => this.handleOnSubmit(e)} ref={(el) => this.officeFormRef = el}>\n          <FieldGroup\n            label=\"Name:\"\n            placeholder=\"name\"\n            regularInput={true}\n            errors={{'name': this.state.errors.name}}\n            initialValue={this.state.name}\n            callbackParent={newState => this.onChildChanged(\"name\", newState)}\n          />\n          <FieldGroup\n            label=\"Location:\"\n            doubleInput={true}\n            placeholder=\"latitude\"\n            placeholder1=\"longitude\"\n            initialValue=\"\"\n            errors={{'longitude': this.state.errors.location}}\n            callbackParent={newState =>\n              this.onChildChanged(\"location\", newState)\n            }\n          />\n          <FieldGroup\n            label=\"Office Start Date:\"\n            datePicker={true}\n            callbackParent={newState =>\n              this.onChildChanged(\"date\", newState)\n            }\n          />\n          <DropDownMenu\n            label=\"Company:\"\n            listCompany={this.props.companies}\n            callbackParent={newState =>\n              this.onChildChanged(\"companyId\", newState)\n            }\n           />\n           <input className=\"btn-submit\" type=\"submit\" value=\"Create\"/>\n        </form>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport { bindActionCreators } from 'redux'; \nimport { connect } from \"react-redux\";\nimport { Link } from 'react-router-dom';\n\nimport * as actionsCompany from '../actions/company';\nimport * as actionsOffice from '../actions/office'\n\nimport { TopContainer } from './TopContainer'\nimport { BottomContainer } from './BottomContainer'\nimport { Card } from '../components/cards'\nimport { CreateCompany } from \"../components/create-company\";\nimport { CreateOffice } from \"../components/create-office/\";\n\nimport './style.css'\nclass OverviewContainer extends React.Component {\n\n  componentDidMount() {\n    this.props.actionsCompany.getCompany()\n  }\n\n  handleSubmitCompany(data) {\n    this.props.actionsCompany.createCompany(data)\n  }\n\n  handleSubmitOffice(data) {\n    this.props.actionsOffice.createOffice(data)\n  }\n\n  handleRemoveCompany(id) {\n    if (window.confirm(\"Are You sure to remove it?\")) {\n      this.props.actionsCompany.removeCompany(id)\n    } else {\n      return\n    }\n  }\n\n  cardContent(item) {\n    return (\n      <div className=\"card-content\">\n        <div>\n          <p className=\"title-ligth-grey\">Address:</p>\n          <p className=\"regular\">{ item.address }</p>\n        </div>\n        <div>\n        <p className=\"title-ligth-grey\">Revenue:</p>\n          <p className=\"regular\">{ item.revenue }</p>\n        </div>\n        <div>\n          <p className=\"title-ligth-grey\">Phone:</p>\n          <p className=\"regular\">{ item.phone }</p>\n        </div>\n      </div>\n    )\n  }\n  \n  noCompany() {\n    return (\n      <p>Ooopss!!! There's no Company created yet </p>\n    )\n  }\n\n  render() {\n    return (\n      <div>\n        <TopContainer height=\"350px\">\n          <div className=\"flex-around\">\n            <div className=\"box\">\n                <CreateCompany handleOnSubmitCompany={newState => this.handleSubmitCompany(newState)}/>\n            </div>\n            <hr />\n            <div className=\"box\">\n              <CreateOffice\n                companies={this.props.company}\n                handleOnSubmitOffice={newState => this.handleSubmitOffice(newState)} />\n            </div>\n          </div>\n        </TopContainer>\n        <BottomContainer>\n          <div>\n            <h1>Companies</h1>\n          </div>\n            <div className=\"grid\">\n              { (this.props.company.length > 0) ? this.props.company.map((item, idx) => {\n                return (\n                  <Link to={`/company/${item.id}/office/`} key={item.id}>\n                    <Card \n                      key={ item.id }\n                      id={ item.id }\n                      name={ item.name }\n                      removeItem= {id => this.handleRemoveCompany(id)}>\n                      {this.cardContent(item)}\n                    </Card>\n                  </Link>\n                )\n              }) : this.noCompany() }\n            </div>\n        </BottomContainer>\n      </div>\n    );\n  }\n};\n\n\nconst mapStateToProps = state => {\n  return {\n    company: state.company.companies,\n    office: state.office.offices\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    actionsCompany: bindActionCreators(actionsCompany, dispatch),\n    actionsOffice: bindActionCreators(actionsOffice, dispatch)\n  }\n}\n\nOverviewContainer = connect(mapStateToProps, mapDispatchToProps)(OverviewContainer)\n\n\nexport default OverviewContainer","\nexport const Page = ({children}) => {\n  return children\n};","import React from \"react\";\n\nimport OverviewContainer from '../../containers/OverviewContainer'\nimport { Page } from '../page'\n\nexport const OverviewPage = props => {\n  return (\n    <Page>\n      <OverviewContainer {...props} />\n    </Page>\n  );\n};\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './style.css'\n\nexport const OfficeDetail= ({company}) => {\n  if (company) {\n    const {name, address, revenue, phone} = company\n    return (\n      <div className=\"office\">\n      <div className=\"office-header\">\n        <div className=\"office-title\">\n            { name }\n        </div>\n      </div>\n        <div className=\"office-content\">\n          <div className=\"office-detail\">\n            <p className=\"title-ligth-grey\">Address:</p>\n            <p className=\"regular\">{ address }</p>\n          </div>\n          <div>\n          <p className=\"title-ligth-grey\">Revenue:</p>\n            <p className=\"regular\">{ revenue }</p>\n          </div>\n          <div>\n            <p className=\"title-ligth-grey\">Phone:</p>\n            <p className=\"regular\">{ phone }</p>\n          </div>\n          <div>\n            <Link className=\"btn-navigate\" to=\"/\">Back to Overview</Link>\n          </div>\n        </div>\n      </div>\n    )\n  } else {\n    return (\n      <div className=\"center\">\n        Loading...\n      </div>\n    )\n  }\n}","import React from 'react';\nimport moment from 'moment'\n\nimport './style.css'\nimport { Card } from '../cards';\n\nexport const ListOffice= ({offices, callbackParent}) => {\n\n  const handleRemoveOffice = (id)  => {\n    if (window.confirm(\"Are You sure to remove it?\")) {\n      callbackParent(id)\n    } else {\n      return;\n    }\n  }\n\n  const cardContent = (item) => {\n    return (\n      <div className=\"card-content\">\n        <div>\n          <p className=\"title-ligth-grey\">Location:</p>\n          <p className=\"regular\">Lat - { item.location.lat }</p>\n          <p className=\"regular\">Long - { item.location.long }</p>\n        </div>\n        <div>\n        <p className=\"title-ligth-grey\">Office Start Date:</p>\n          <p className=\"regular\">{ moment(item.startDate).format('L') }</p>\n        </div>\n      </div>\n    )\n  }\n\n\n\n  if (offices.length > 0) {\n    return (\n      <div className=\"wrapper-cards grid\">\n        { offices.map((item, idx) => {\n          return (\n            <Card \n              key={ idx }\n              id= { item.id }\n              name={ item.name }\n              removeItem= {id => handleRemoveOffice(id)}>\n            {cardContent(item)}\n            </Card>\n          )\n        })}\n      </div>\n    )\n  } else {\n    return (\n      <div className=\"center\">\n        There's no office created yet!!!\n      </div>\n    )\n  }\n  \n}","import React from \"react\";\nimport { bindActionCreators } from 'redux'; \nimport { connect } from \"react-redux\";\n\nimport * as actionsOffice from '../actions/office'\nimport * as actionsCompany from '../actions/company'\n\nimport { TopContainer } from './TopContainer'\nimport { BottomContainer } from './BottomContainer'\nimport { OfficeDetail } from \"../components/office-detail/office-detail\";\nimport { ListOffice } from \"../components/list-office/list-office\";\n\nimport './style.css'\nclass OfficeContainer extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      companyId: ''\n    }\n  }\n\n  componentDidMount() {\n    const companyId = this.props.match.params.id\n    this.setState({companyId})\n    this.getCompany(companyId)\n    this.props.actionsOffice.getOfficeByCompany(companyId)\n  }\n\n  handleRemoveOffice(officeId) {\n    this.props.actionsOffice.removeOffice(officeId, this.state.companyId)\n  }\n\n  getCompany(companyId) {\n    this.props.actionsCompany.getCompany(companyId)\n  }\n  \n  render() {\n    return (\n      <div>\n        <TopContainer height=\"270px\">\n          <OfficeDetail company={this.props.company[0]} />\n        </TopContainer>\n        <BottomContainer>\n          <ListOffice offices={this.props.office} callbackParent={id => this.handleRemoveOffice(id)} />\n        </BottomContainer> \n      </div>\n    );\n  }\n};\n\n\n\n\nconst mapStateToProps = state => {\n  return {\n    office: state.office.offices,\n    company: state.company.companies\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    actionsOffice: bindActionCreators(actionsOffice, dispatch),\n    actionsCompany: bindActionCreators(actionsCompany, dispatch)\n  }\n}\n\nOfficeContainer = connect(mapStateToProps, mapDispatchToProps)(OfficeContainer)\n\n\nexport default OfficeContainer","import React from \"react\";\n\nimport OfficeContainer from '../../containers/OfficeContainer'\nimport { Page } from '../page'\n\nexport const OfficePage = props => {\n  return (\n    <Page>\n      <OfficeContainer {...props} />\n    </Page>\n  );\n};\n","import React, { Component } from 'react';\nimport { Provider } from 'react-redux'\nimport { Switch } from 'react-router'\nimport {Route, BrowserRouter as Router } from 'react-router-dom';\n\nimport store from './store/configureStore'\nimport './App.css';\nimport { OverviewPage } from './pages/overview-page';\nimport { OfficePage } from './pages/office-page';\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <div className=\"App\">\n          <div className=\"wrapper app\">\n            <Router>\n              <Switch>\n                <Route exact path=\"/\" component={OverviewPage}/>\n                <Route path=\"/company/:id/office\" component={OfficePage}/>\n              </Switch>\n            </Router>\n          </div>\n        </div>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}